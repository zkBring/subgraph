// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DropCreated extends ethereum.Event {
  get params(): DropCreated__Params {
    return new DropCreated__Params(this);
  }
}

export class DropCreated__Params {
  _event: DropCreated;

  constructor(event: DropCreated) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get drop(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get maxClaims(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get zkPassSchemaId(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }

  get expiration(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get metadataIpfsHash(): Bytes {
    return this._event.parameters[7].value.toBytes();
  }
}

export class FeeRecipientUpdated extends ethereum.Event {
  get params(): FeeRecipientUpdated__Params {
    return new FeeRecipientUpdated__Params(this);
  }
}

export class FeeRecipientUpdated__Params {
  _event: FeeRecipientUpdated;

  constructor(event: FeeRecipientUpdated) {
    this._event = event;
  }

  get newFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeUpdated extends ethereum.Event {
  get params(): FeeUpdated__Params {
    return new FeeUpdated__Params(this);
  }
}

export class FeeUpdated__Params {
  _event: FeeUpdated;

  constructor(event: FeeUpdated) {
    this._event = event;
  }

  get newFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DropFactory extends ethereum.SmartContract {
  static bind(address: Address): DropFactory {
    return new DropFactory("DropFactory", address);
  }

  createDrop(
    token: Address,
    amount: BigInt,
    maxClaims: BigInt,
    zkPassSchemaId: Bytes,
    expiration: BigInt,
    metadataIpfsHash: Bytes,
  ): Address {
    let result = super.call(
      "createDrop",
      "createDrop(address,uint256,uint256,bytes32,uint256,bytes32):(address)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(maxClaims),
        ethereum.Value.fromFixedBytes(zkPassSchemaId),
        ethereum.Value.fromUnsignedBigInt(expiration),
        ethereum.Value.fromFixedBytes(metadataIpfsHash),
      ],
    );

    return result[0].toAddress();
  }

  try_createDrop(
    token: Address,
    amount: BigInt,
    maxClaims: BigInt,
    zkPassSchemaId: Bytes,
    expiration: BigInt,
    metadataIpfsHash: Bytes,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createDrop",
      "createDrop(address,uint256,uint256,bytes32,uint256,bytes32):(address)",
      [
        ethereum.Value.fromAddress(token),
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(maxClaims),
        ethereum.Value.fromFixedBytes(zkPassSchemaId),
        ethereum.Value.fromUnsignedBigInt(expiration),
        ethereum.Value.fromFixedBytes(metadataIpfsHash),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fee(): BigInt {
    let result = super.call("fee", "fee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fee", "fee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  feeRecipient(): Address {
    let result = super.call("feeRecipient", "feeRecipient():(address)", []);

    return result[0].toAddress();
  }

  try_feeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeRecipient", "feeRecipient():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateDropCall extends ethereum.Call {
  get inputs(): CreateDropCall__Inputs {
    return new CreateDropCall__Inputs(this);
  }

  get outputs(): CreateDropCall__Outputs {
    return new CreateDropCall__Outputs(this);
  }
}

export class CreateDropCall__Inputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get maxClaims(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get zkPassSchemaId(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get expiration(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get metadataIpfsHash(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateDropCall__Outputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get dropAddress(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateFeeCall extends ethereum.Call {
  get inputs(): UpdateFeeCall__Inputs {
    return new UpdateFeeCall__Inputs(this);
  }

  get outputs(): UpdateFeeCall__Outputs {
    return new UpdateFeeCall__Outputs(this);
  }
}

export class UpdateFeeCall__Inputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }

  get _fee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateFeeCall__Outputs {
  _call: UpdateFeeCall;

  constructor(call: UpdateFeeCall) {
    this._call = call;
  }
}

export class UpdateFeeRecipientCall extends ethereum.Call {
  get inputs(): UpdateFeeRecipientCall__Inputs {
    return new UpdateFeeRecipientCall__Inputs(this);
  }

  get outputs(): UpdateFeeRecipientCall__Outputs {
    return new UpdateFeeRecipientCall__Outputs(this);
  }
}

export class UpdateFeeRecipientCall__Inputs {
  _call: UpdateFeeRecipientCall;

  constructor(call: UpdateFeeRecipientCall) {
    this._call = call;
  }

  get _feeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFeeRecipientCall__Outputs {
  _call: UpdateFeeRecipientCall;

  constructor(call: UpdateFeeRecipientCall) {
    this._call = call;
  }
}
