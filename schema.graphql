type DropCreated @entity(immutable: true) {
  id: ID!
  creator: String! # address as hex string
  drop: String!    # address as hex string
  token: String!   # address as hex string
  decimals: Int!  # token decimals
  symbol: String! # token symbol
  amount: BigInt!  # uint256
  maxClaims: BigInt! # uint256
  zkPassSchemaId: String!  # bytes32 as hex string
  expiration: BigInt!      # uint256
  metadataIpfsHash: String!  # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
  factoryAddress: String!  
}
  
type Claimed @entity {
  id: ID!
  recipient: String!
  uHash: String!
  blockTimestamp: BigInt!
  dropAddress: String!
  txHash: String!
}
  
type MetadataUpdated @entity {
  id: ID!
  metadataIpfsHash: String!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
  dropAddress: String!  
}

type BringStaked @entity {
  id: ID!
  bringToken: String!
  amount: BigInt!
  totalStaked: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
  dropAddress: String!  
}

type Stopped @entity {
  id: ID!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: String!
  dropAddress: String!  
}
